buildscript {
    repositories {
        google()
        jcenter()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.1'
    }
}

plugins {
    id 'maven-publish'
}

ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID') ?: ''
ext["signing.password"] = System.getenv('SIGNING_KEY_PASSWORD') ?: ''
ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_KEY_FILE') ?: ''

version '5.4.4'
ext {
    compileSdkVersion = 30
    minSdkVersion = 23
    targetSdkVersion = 30
    versionCode = 52
    versionName = version
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task changeReleaseVersion {
    doLast {
        def gradleFile = new File('build.gradle')
        def gradleFileText = gradleFile.text.replaceFirst("\\nversion '\\d+\\.\\d+\\.\\d+(-.*)?'", "\nversion '" + versionParam + "'")
        gradleFile.write(gradleFileText)
    }
}

task changeREADMEVersion {
    doLast {
        def readmeFile = new File('README.md')
        def readmeFileText = readmeFile.text.replaceFirst("com.braintreepayments.api:card-form:\\d+\\.\\d+\\.\\d+(-.*)?'", "com.braintreepayments.api:card-form:" + versionParam + "'")
        readmeFile.write(readmeFileText)
    }
}

task incrementSNAPSHOTVersion {
    doLast {
        def gradleFile = new File('build.gradle')
        def (major, minor, patch) = versionParam.tokenize('.')
        def patchInteger = patch.toInteger()
        def newVersion = "$major.$minor.${patchInteger + 1}-SNAPSHOT"
        def gradleFileText = gradleFile.text.replaceFirst("\\nversion '\\d+\\.\\d+\\.\\d+(-.*)?'", "\nversion '" + newVersion + "'")
        gradleFile.write(gradleFileText)
    }
}

task incrementVersionCode {
    doLast {
        def gradleFile = new File('build.gradle')
        def versionText = gradleFile.text.find("versionCode = \\d+")
        def params = versionText.split("=")
        def newVersionCode = params[1].trim().toInteger() + 1
        def gradleFileText = gradleFile.text.replaceFirst("versionCode = \\d+", "versionCode = " + newVersionCode)
        gradleFile.write(gradleFileText)
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.braintreepayments'
                artifactId = 'android-card-form'
                version = '5.4.4'
            }
        }
    }
}